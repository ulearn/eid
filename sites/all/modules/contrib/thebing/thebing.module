<?php

include_once dirname(__FILE__).'/includes/class.snippet.php';

function thebing_tokens($type, $tokens, array $data = array(), array $options = array()) {

	if($type === 'thebing') {

		$aReplacement = array();
		
		foreach($tokens as $sAttributes=>$sToken) {

			$aAttributes = explode(':', $sAttributes);

			$sContent = thebing_getContent($aAttributes);

			$aReplacement[$sToken] = $sContent;

		}

		return $aReplacement;

	}
}

function thebing_token_info() {

	$type = array(
		'name' => t('Thebing Snippets'),
		'description' => t('Tokens related to Thebing Software')
	);

	$node = array(
		'placement_test' => array(
			'name' => t('Placement test'),
			'description' => t('Display placement test (URL, Key, Language code)'),
			'dynamic' => true
		),
		'registrationform' => array(
			'name' => t('Registration form'),
			'description' => t('Display registration form (URL, Key, Language code)'),
			'dynamic' => true
		),
		'default' => array(
			'name' => t('Standard'),
			'description' => t('Display content or forms from Thebing Software (URL, Combination key, Template key)'),
			'dynamic' => true
		)
	);

	return array(
		'types' => array('thebing' => $type),
		'tokens' => array('thebing' => $node)
	);
}

/**
 * Verfügbare Typen: placement_test, registrationform, default
 * Verfügbare Attribute: type, server, combinationkey, templatekey, key, language, currencyid, currencyiso
 *
 * @param array $attributes
 * 	   type = placement_test -> $attributes('type', 'server', 'key', ['language'], ['currencyid'], ['currencyiso'])
 * 	   type = registrationform -> $attributes('type', 'server', ['key'], ['language'])
 * 	   type = default -> $attributes('type', 'server', 'combinationkey', 'templatekey')
 *
 * @return string
 */
function thebing_getContent($attributes) {

	$attributes[1] = thebing_getHostUrl($attributes[1]);	
	
	$sContent = '';
	switch($attributes[0]) {
		case 'placement_test':
			$sContent = thebing_getPlacementTest($attributes[1], $attributes[2], $attributes[3]);
			break;
		case 'registrationform':
			$sContent = thebing_getRegistrationForm($attributes[1], $attributes[2], $attributes[3]);
			break;
		case 'default':
			$sContent = thebing_getDefault($attributes[1], $attributes[2], $attributes[3]);
			break;
	}

	return $sContent;
}

/**
 * @param string $sServer
 * @param string $sKey
 * @param string $sLanguage define the language of the site, the default Language of the school is used if it is not defined
 * @param string $iCurrencyId define the Currency of the Site by ID , otherwise the first currency or $_VARS['sCurrency'] is used
 * @param string $sCurrencyIso define the Currency of the Site by ISO name, otherwise the first currency or $_VARS['idCurrency'] is used
 * @return string
 */
function thebing_getPlacementTest($sServer, $sKey, $sLanguage = '') {

	if(isset($_REQUEST['r'])) {
		$aSubmitVars['r'] = $_REQUEST['r'];
	}

	$aSubmitVars['KEY'] = $sKey;

	if(isset($_POST['save'])) {
		$aSubmitVars['save'] = $_POST['save'];
	}

	if(isset($_POST['idPeriod'])) {
		$aSubmitVars['isPeriod'] = $_POST['idPeriod'];
	}

	if($sLanguage !== '') {
		$aSubmitVars['page_language'] = $sLanguage;
	}
	if($iCurrencyId !== '') {
		$aSubmitVars['idCurrency'] = $iCurrencyId;
	}
	if($sCurrencyIso !== '') {
		$aSubmitVars['sCurrency'] = $sCurrencyIso;
	}

	$oSnoopy = new Snoopy();
	$oSnoopy->submit($sServer . '/system/extensions/kolumbus_placementtest.php', $aSubmitVars);
	$sResults = $oSnoopy->results;

	return $sResults;
}

/**
 * @param string $sServer
 * @param string $sKey
 * @param string $sLanguage
 * @return string
 */
function thebing_getRegistrationForm($sServer, $sKey = '', $sLanguage = '') {

	$aSubmitVars = array();

	if(!empty($_REQUEST)) {
		foreach((array)$_REQUEST as $mKey=>$mValue) {
			$aSubmitVars[$mKey] = $mValue;
		}
	}
	if($sKey !== '') {
		$aSubmitVars['form_key'] = $sKey;
	}
	if($sLanguage !== '') {
		$aSubmitVars['page_language'] = $sLanguage;
	}

	$oSnoopy = new Snoopy();
	$aFiles = array();

	if(!empty($_FILES)) {

		$sTempDir = sys_get_temp_dir();
		if(!is_writeable($sTempDir)) {
			die('Fatal error while uploading file');
		}

		foreach((array)$_FILES as $sKey => $mItems) {
			if(!is_array($mItems['name'])) {
				$sTarget = $sTempDir . '/' . $mItems['name'];
				if(move_uploaded_file($mItems['tmp_name'], $sTarget)) {
					$aFiles[$sKey] = $sTarget;
				}
			} else {
				thebing_prepareFiles($mItems['name'], $mItems['tmp_name'], $aFiles[$sKey], $sTempDir);
			}
		}

	}

	$oSnoopy->cookies = $_COOKIE;
	unset($aSubmitVars['PHPSESSID']);

	$oSnoopy->set_submit_multipart();
	$oSnoopy->submit($sServer . '/system/extensions/thebing_registration_form.php?'.$_SERVER['QUERY_STRING'], $aSubmitVars, $aFiles);

	$sResults = $oSnoopy->results;

	if(
		isset($_REQUEST['task']) &&
		(
			$_REQUEST['task'] == 'get_js' ||
			$_REQUEST['task'] == 'get_image' ||
			$_REQUEST['task'] == 'get_file' ||
			$_REQUEST['task'] == 'get_ajax'
		)
	) {
		foreach((array)$oSnoopy->headers as $sHeader) {
			if(strpos($sHeader, 'Content-Type') !== false) {
				header($sHeader);
			}
		}
		ob_clean();
		echo $oSnoopy->results;
		die();
	}

	// Make internal server error of registration form recognizably
	if($oSnoopy->status == 500) {
		$sResults = 'Fatal error of registration form!';
	}

	// If content is already sent, no cookies can be set afterwards.
	// That's deadly for the function of the registration form, so that's a fatal error.
	// Usually this is an user error!
	if(headers_sent()) {
		$sResults = 'Wrong order of content output. Check whether you\'ve no output before including of registration form!';
	}

	foreach((array)$oSnoopy->cookies as $sKey=>$mValue) {
		$bIsMagicQuotes = get_magic_quotes_gpc();
		if($bIsMagicQuotes) {
			$mValue = stripslashes($mValue);
		}
		if(is_scalar($mValue)) {
			setcookie($sKey, $mValue);
		}
	}

	if(!empty($aFiles)) {
		thebing_unlinkFiles($aFiles);
	}

	return $sResults;
}

/**
 * @param string $sServer
 * @param string $sCombinationKey
 * @param string $sTemplateKey
 * @return string
 */
function thebing_getDefault($sServer, $sCombinationKey, $sTemplateKey) {

	$oSnippet = new Thebing_Snippet($sServer, $sCombinationKey, $sTemplateKey);
	$oSnippet->execute();
	$sContent = $oSnippet->getContent();

	return $sContent;
}

/**
 * @param array $aFiles
 */
function thebing_unlinkFiles(&$aFiles) {

	foreach((array)$aFiles as $mKey => $mFile) {
		if(is_array($mFile)) {
			thebing_unlinkFiles($aFiles[$mKey]);
		} else if(is_file($mFile)) {
			unlink($mFile);
		}
	}

}

/**
 * @param $mItems
 * @param $mTmpItems
 * @param $aFiles
 * @param $sTempDir
 */
function thebing_prepareFiles($mItems, $mTmpItems, &$aFiles, $sTempDir) {

	foreach((array)$mItems as $sKey => $aItems) {
		if(!is_array($aItems)) {
			$sTarget = $sTempDir . '/' . $mItems[$sKey];
			if(move_uploaded_file($mTmpItems[$sKey], $sTarget)) {
				$aFiles[$sKey] = $sTarget;
			}
		} else {
			thebing_prepareFiles($mItems[$sKey], $mTmpItems[$sKey], $aFiles[$sKey], $sTempDir);
		}
	}

}

function thebing_getHostUrl($sHost=false) {

	if(!empty($sHost) && strpos($sHost, 'http') === false) {
		$sHost = 'https://'.$sHost;
	}

	return $sHost;
}